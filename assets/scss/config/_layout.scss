@mixin main-module-layout() {
  grid-template-columns: minmax(400px, 650px);
  place-content: center;
  grid-template-areas : "header" "rail" "link" "content" "extra";

  .module-header {
    grid-area: header;
  }

  .module-link {
    grid-area: link;
  }

  .module-rail {
    grid-area: rail;
    text-align: right;
  }

  .module-content {
    grid-area: content;
  }
}

@mixin grid-module-layout {
   place-content: start;
   grid-column-gap: $grid-gap;
   grid-template-columns: 200px minmax(auto, 675px) auto;
   grid-template-areas: "link  header   ..." "rail   content  ..."; // place-content: start;

   &.-flipped {
     grid-template-columns: auto minmax(auto, 675px) 200px;
     grid-template-areas: "...  header link" "...  content rail"; // place-content: start;
   }

   .module-content-full {
     grid-column: 2 / span 2;
   }
}

// Breakpoints

$screen-sm:     520px;
$screen-md:     730px;
$screen-lg:   	1100px;
$screen-xl:   	1400px;

$grid-gap: $h4;
$rail: minmax(70px, 175px);



// ----
// Grids
// ----

// Container mixin for max width

@mixin contain($size) {
  margin: 0 auto;
  max-width: $size;
}



// ----
// Site Grid
// ----


.inner-np,
.inner {
  @include contain($screen-xl);
}

.inner {
  padding-left: $grid-gap;
  padding-right: $grid-gap;
}

@mixin bleed($size: $grid-gap) {
  margin-left: -$size;
  margin-right: -$size;
  max-width: calc(100% + #{$size * 2});
}



// Fallback

@include grid(no) {
	.site-header,
	.site-footer {
    @include contain($screen-lg);
	}
	.site-main {
    @include contain($screen-md);
  }
}






// ----
// Main Content
// ----

.main-header {

  &.-text {
    padding-bottom: $grid-gap;
    margin-bottom: $grid-gap;
  }
}

.header-svg {
  display: block;
}


.grid-content {
  display: grid;
  grid-template-areas: "content" "aside";

  @include bp(large) {
    grid-template-columns: 1fr 3fr;
    grid-template-areas: "aside content";
    grid-column-gap: $grid-gap;
  }
}

.main-aside {
  grid-area: aside;
}

.main-content {
  // padding-left: $grid-gap;
  grid-area: content;

  @include bp(med) {
    // padding-left: $grid-gap;
    // padding-right: $grid-gap;
  }

  @include bp(large) {
    .blog & {
      // padding-right: $grid-gap; // padding: 0;
    }
  }
}


// ----
// Content
// ----


// TODO - using this?
.grid-header {
  // background-color: $accent-dark;
  color: $text-light;
  margin-bottom: $h2;
  display: grid;
  grid-template-rows: minmax(250px, 400px);

  @include bp(med) {
    grid-template-rows: minmax(500px, 60vh);
    grid-template-columns: 50% minmax(auto, 650px);
    grid-column-gap: $grid-gap;
  }
}

.header-right,
.header-left {
  display: flex;
  flex-direction: column;
}

.header-title {
	font-size: $h1;
	line-height: 0.7;
  padding-top: $grid-gap*2;

  .-image & {
    font-weight: $font-weight-strong;
    text-transform: uppercase;
    padding-left: $grid-gap;
    background-image: linear-gradient(transparent, $accent-vdark);
  }

  .-text & {
    margin-bottom: $h3;
  }
}

.header-lead,
.section-lead,
.lead {
	font-size: $h4;
}

.header-intro {
  margin-bottom: $base;
}






// ----
// Post Tease Grid
// ----


.module {
  display: grid;
  grid-auto-flow: row dense;

  &.-aside {
    @include bp(small) {
      @include main-module-layout;
      @include grid-module-layout;
    }
  }

  &.-article {
    padding-left: $grid-gap;
    padding-right: $grid-gap;

    @include bp(med) {
      @include main-module-layout;
    }

    @include bp(large) {
      @include grid-module-layout;
    }
  }

}

.module-link {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-end;
}

.module-rail {
  @include bp(large) {
    position: relative;
    margin-top: $h1;
    padding-right: $grid-gap;
    padding-left: $grid-gap / 2;
  }
}